c({"type": "function", "name": "Y.EventHandle.once", "params": [{"types": [{"type": "String"}], "name": "type", "description": "<p>The name of the event</p>"}, {"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [], "context": undefined}], "name": "fn", "description": "<p>The callback to execute in response to the event</p>"}, {"types": [{"type": "Object"}], "optional": true, "name": "context", "description": "<p>Override <code>this</code> object in callback</p>"}, {"types": [{"type": "Any"}], "optional": true, "name": "arg*", "description": "<p>0..n additional arguments to supply to the subscriber</p>"}], "parent": "Y.EventHandle", "body": "", "description": "<p>Listen to a custom event hosted by this object one time.\nThis is the equivalent to <code>on</code> except the\nlistener is immediatelly detached when it is executed.</p>", "comment": "undefined@method once\n", "returns": {"types": [{"type": "EventHandle"}], "description": "<p>A subscription handle capable of detaching the\n                      subscription</p>"}, "src": "can/lib/yui-3.7.3.js", "line": 7629})