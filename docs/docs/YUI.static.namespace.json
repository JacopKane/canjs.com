c({"type": "function", "name": "YUI.static.namespace", "params": [{"types": [{"type": "String"}], "name": "namespace*", "description": "<p>namespaces to create.</p>"}], "parent": "YUI.static", "body": "", "description": "<p>Adds a namespace object onto the YUI global if called statically.</p>\n\n<p>// creates YUI.your.namespace.here as nested objects\nYUI.namespace(\"your.namespace.here\");</p>\n\n<p>If called as a method on a YUI <em>instance</em>, it creates the\nnamespace on the instance.</p>\n\n<p>// creates Y.property.package\nY.namespace(\"property.package\");</p>\n\n<p>Dots in the input string cause <code>namespace</code> to create nested objects for\neach token. If any part of the requested namespace already exists, the\ncurrent object will be left in place.  This allows multiple calls to\n<code>namespace</code> to preserve existing namespaced properties.</p>\n\n<p>If the first token in the namespace string is \"YAHOO\", the token is\ndiscarded.</p>\n\n<p>Be careful with namespace tokens. Reserved words may work in some browsers\nand not others. For instance, the following will fail in some browsers\nbecause the supported version of JavaScript reserves the word \"long\":</p>\n\n<p>Y.namespace(\"really.long.nested.namespace\");</p>\n\n<p><em>Note: If you pass multiple arguments to create multiple namespaces, only\nthe last one created is returned from this function.</em></p>", "comment": "undefined@method namespace\n", "returns": {"types": [{"type": "Object"}], "description": "<p>A reference to the last namespace object created.</p>"}, "src": "can/lib/yui-3.7.3.js", "line": 1166})