c({"name": "resolve.static.delegate", "type": "property", "parent": "resolve.static", "body": "", "description": "<p>Sets up event delegation on a container element.  The delegated event\nwill use a supplied filter to test if the callback should be executed.\nThis filter can be either a selector string or a function that returns\na Node to use as the currentTarget for the event.</p>\n\n<p>The event object for the delegated event is supplied to the callback\nfunction.  It is modified slightly in order to support all properties\nthat may be needed for event delegation.  'currentTarget' is set to\nthe element that matched the selector string filter or the Node returned\nfrom the filter function.  'container' is set to the element that the\nlistener is delegated from (this normally would be the 'currentTarget').</p>\n\n<p>Filter functions will be called with the arguments that would be passed to\nthe callback function, including the event object as the first parameter.\nThe function should return false (or a falsey value) if the success criteria\naren't met, and the Node to use as the event's currentTarget and 'this'\nobject if they are.</p>", "comment": "undefined@method delegate\n@for YUI\n", "params": [{"name": "type", "description": "<p>{string} the event type to delegate</p>"}, {"name": "fn", "description": "<p>{function} the callback function to execute.  This function\nwill be provided the event object for the delegated event.</p>"}, {"name": "el", "description": "<p>{string|node} the element that is the delegation container</p>"}, {"name": "filter", "description": "<p>{string|function} a selector that must match the target of the\nevent or a function that returns a Node or false.</p>"}, {"name": "context", "description": "<p>optional argument that specifies what 'this' refers to.</p>"}, {"name": "args*", "description": "<p>0..n additional arguments to pass on to the callback function.\nThese arguments will be added after the event object.</p>"}], "returns": {"types": [{"type": "EventHandle"}], "description": "<p>the detach handle</p>"}, "src": "can/lib/yui-3.7.3.js", "line": 15145})