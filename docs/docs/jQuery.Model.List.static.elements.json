c({"type": "function", "name": "jQuery.Model.List.static.elements", "params": [{"types": [{"type": "selector"}, {"type": "jQuery"}, {"type": "element"}], "name": "context", "description": "<p>If provided, only elements inside this element that represent this model will be returned.</p>"}], "parent": "jQuery.Model.List.static", "body": "", "description": "<p>Returns elements that represent this list.  For this to work, your element's should\nuse the [jQuery.Model.prototype.identity identity] function in their class name.  Example:</p>\n\n<pre><code>&lt;div class='todo &lt;%= todo.identity() %&gt;'&gt; ... &lt;/div&gt;\n</code></pre>\n\n<p>This also works if you hooked up the model:</p>\n\n<pre><code>&lt;div &lt;%= todo %&gt;&gt; ... &lt;/div&gt;\n</code></pre>\n\n<p>Typically, you'll use this as a response to a Model Event:</p>\n\n<pre><code>\"{Todo} destroyed\": function(Todo, event, todo){\n  todo.elements(this.element).remove();\n}\n</code></pre>", "returns": {"types": [{"type": "jQuery"}, {"type": "collection"}], "description": "<p>Returns a jQuery wrapped nodelist of elements that have these model instances identities in their class names.</p>"}, "src": "can/model/list/list.js", "line": 406})