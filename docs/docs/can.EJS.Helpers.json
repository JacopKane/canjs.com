c({"type": "page", "name": "can.EJS.Helpers", "params": [{"name": "data", "types": [{"type": "*"}]}, {"name": "extras", "types": [{"type": "*"}]}], "parent": "can.EJS", "body": "<p>By adding functions to can.EJS.Helpers.prototype, those functions will be available in the \nviews.</p>\n\n<p>The following helper converts a given string to upper case:</p>\n\n<pre><code>can.EJS.Helpers.prototype.toUpper = function(params)\n{\n    return params.toUpperCase();\n}\n</code></pre>\n\n<p>Use it like this in any EJS template:</p>\n\n<pre><code>&lt;%= toUpper('javascriptmvc') %&gt;\n</code></pre>\n\n<p>To access the current DOM element return a function that takes the element as a parameter:</p>\n\n<pre><code>can.EJS.Helpers.prototype.upperHtml = function(params)\n{\n    return function(el) {\n        $(el).html(params.toUpperCase());\n    }\n}\n</code></pre>\n\n<p>In your EJS view you can then call the helper on an element tag:</p>\n\n<pre><code>&lt;div &lt;%= upperHtml('javascriptmvc') %&gt;&gt;&lt;/div&gt;\n</code></pre>", "description": "", "title": "Helpers", "comment": " ", "src": "can/view/ejs/ejs.js", "line": 85})