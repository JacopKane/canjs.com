c({"body": "<p><code>can.$(element)</code> returns the the underlying\nlibrary's NodeList.  It can be passed\na css selector, a HTMLElement or an array of HTMLElements.</p>\n\n<p>The following lists how the NodeList is created by each library:</p>\n\n<ul>\n<li><strong>jQuery</strong> <code>jQuery( HTMLElement )</code></li>\n<li><strong>Zepto</strong> <code>Zepto( HTMLElement )</code></li>\n<li><strong>Dojo</strong> <code>new dojo.NodeList( HTMLElement )</code></li>\n<li><strong>Mootools</strong> <code>$$( HTMLElement )</code></li>\n<li><strong>YUI</strong> <code>Y.all(selector)</code> or <code>Y.NodeList</code></li>\n</ul>", "description": "<p>Make a library's nodelist. </p>", "title": "", "name": "can.$", "type": "function", "parent": "can.util", "signatures": [{"code": "can.$(element)", "description": "", "params": [{"types": [{"type": "String"}, {"type": "Element"}, {"type": "NodeList"}], "name": "element", "description": "<p>The selector, HTML element, or nodelist\nto pass to the underlying library.</p>"}], "returns": {"types": [{"type": "NodeList"}], "description": "<p>The nodelist as constructed by the underlying library.</p>"}}], "comment": " ", "src": "can/util/can.js", "line": 361})