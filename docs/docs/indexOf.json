c({"type": "function", "name": "indexOf", "parent": "can.Observe.List.prototype", "body": "", "description": "<p>Look for an item in a List. </p>", "title": "", "signatures": [{"code": "indexOf(item)", "description": "<p><code>indexOf</code> finds the position of a given item in the List.</p>", "params": [{"types": [{"type": "*"}], "name": "item", "description": "<p>the item to find</p>"}], "returns": {"types": [{"type": "Number"}], "description": "<p>the position of the item in the List, or -1 if the item is not found.</p>\n\n<pre>var list = new can.Observe.List(['Alice', 'Bob', 'Eve']);\nlist.indexOf('Alice');   // 0\nlist.indexOf('Charlie'); // -1</pre>\n\n<p>It is trivial to make a <code>contains</code>-type function using <code>indexOf</code>:</p>\n\n<pre>function(list, item) {\n    return list.indexOf(item) >= 0;\n}</pre>"}}], "src": "can/observe/observe.js", "line": 1746})