c({"type": "function", "name": "can.getObject", "params": [{"types": [{"type": "String"}], "name": "name", "description": "<p>the name of the object to look for</p>"}, {"types": [{"type": "Array"}], "optional": true, "name": "roots", "description": "<p>an array of root objects to look for the \n  name.  If roots is not provided, the window is used.</p>"}, {"types": [{"type": "Boolean"}], "optional": true, "name": "add", "description": "<p>true to add missing objects to \n the path. false to remove found properties. undefined to \n not modify the root object</p>"}], "parent": "can.util", "body": "", "description": "<p>Gets an object from a string.  It can also modify objects on the\n'object path' by removing or adding properties.</p>\n\n<pre><code>Foo = {Bar: {Zar: {\"Ted\"}}}\ncan.getObject(\"Foo.Bar.Zar\") //-&gt; \"Ted\"\n</code></pre>", "title": "", "returns": {"types": [{"type": "Object"}], "description": "<p>The object.</p>"}, "src": "can/util/string/string.js", "line": 51})