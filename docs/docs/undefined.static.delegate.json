c({"name": "undefined.static.delegate", "type": "property", "parent": "undefined.static", "body": "", "description": "<p>Implementers SHOULD provide this method definition.</p>\n\n<p>Implementation logic for subscriptions done via\n<code>node.delegate(type, fn, filter)</code> or\n<code>Y.delegate(type, fn, container, filter)</code>.  Like with\n<code>on()</code> above, this function should monitor the environment\nfor the event being fired, and trigger subscription execution by\ncalling <code>notifier.fire(e)</code>.</p>\n\n<p>This function receives a fourth argument, which is the filter\nused to identify which Node's are of interest to the subscription.\nThe filter will be either a boolean function that accepts a target\nNode for each hierarchy level as the event bubbles, or a selector\nstring.  To translate selector strings into filter functions, use\n<code>Y.delegate.compileFilter(filter)</code>.</p>", "comment": "undefined@method delegate\n@since 3.2.0\n", "params": [{"name": "node", "description": "<p>{Node} the node the subscription is being applied to</p>"}, {"name": "sub", "description": "<p>{Subscription} the object to track this subscription</p>"}, {"name": "notifier", "description": "<p>{SyntheticEvent.Notifier} call notifier.fire(..) to\n             trigger the execution of the subscribers</p>"}, {"name": "filter", "description": "<p>{String|Function} Selector string or function that\n             accepts an event object and returns null, a Node, or an\n             array of Nodes matching the criteria for processing.</p>"}], "src": "can/lib/yui-3.7.3.js", "line": 19619})