c({"name": "can.Model.static.destroy", "type": "function", "parent": "can.Model.static", "body": "<p><code>destroy(id) -&gt; Deferred</code> is used by [can.Model::destroy] remove a model \ninstance from the server.</p>\n\n<h2>Implement with a URL</h2>\n\n<p>You can implement destroy with a string like:</p>\n\n<pre><code>Recipe = can.Model({\n  destroy : \"/recipe/{id}\"\n},{})\n</code></pre>\n\n<p>And use [can.Model::destroy] to destroy it like:</p>\n\n<pre><code>Recipe.findOne({id: 1}, function(recipe){\n      recipe.destroy();\n});\n</code></pre>\n\n<p>This sends a <code>DELETE</code> request to <code>/thing/destroy/1</code>.</p>\n\n<p>If your server does not support <code>DELETE</code> you can override it like:</p>\n\n<pre><code>Recipe = can.Model({\n  destroy : \"POST /recipe/destroy/{id}\"\n},{})\n</code></pre>\n\n<h2>Implement with a function</h2>\n\n<p>Implement destroy with a function like:</p>\n\n<pre><code>Recipe = can.Model({\n  destroy : function(id){\n    return $.post(\"/recipe/destroy/\"+id,{});\n  }\n},{})\n</code></pre>\n\n<p>Destroy just needs to return a deferred that resolves.</p>", "description": "<p>Destroy a resource on the server. </p>", "title": "destroy", "signatures": [{"code": "[METHOD] /path/to/resource", "description": "<p>If you provide a URL, the Model will send a request to that URL using\nthe method specified (or DELETE if none is specified) when deleting an\ninstance on the server. (See below for more details.)</p>", "params": [], "returns": {"types": [{"type": "can.Deferred"}], "description": "<p>A Deferred that resolves to the destroyed model.</p>"}}, {"code": "function(id)", "description": "<p>If you provide a function, the Model will expect you to do your own AJAX requests.</p>", "params": [{"types": [{"type": "*"}], "name": "id", "description": "<p>The ID of the resource to destroy.</p>"}], "returns": {"types": [{"type": "can.Deferred"}], "description": "<p>A Deferred that resolves to the destroyed model.</p>"}}], "comment": " ", "src": "can/model/model.js", "line": 362})