c({"body": "<p><code>deferred.resolveWith(context, arguments)</code> resolves a Deferred and calls the <code>doneCallbacks</code> with the given arguments.</p>\n\n<pre><code>var def = can.Deferred();\ndef.resolveWith(this, { animals: [ 'cows', 'monkey', 'panda' ] })\n</code></pre>", "description": "<p>Resolve a Deferred in a particular context. </p>", "title": "resolveWith", "name": "can.Deferred.prototype.resolveWith", "type": "function", "parent": "can.Deferred.prototype", "signatures": [{"code": "resolveWith(context[, arguments])", "description": "", "params": [{"types": [{"type": "Object"}], "name": "context", "description": "<p>Context passed to the <code>doneCallbacks</code> as the <code>this</code> object.</p>"}, {"types": [{"type": "Object"}], "optional": true, "name": "arguments", "description": "<p>Array of arguments that are passed to the <code>doneCallbacks</code>.</p>"}]}], "comment": " ", "src": "can/util/can.js", "line": 563})