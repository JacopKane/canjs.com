c({"name": "undefined.static.on", "type": "property", "parent": "undefined.static", "body": "", "description": "<p>Implementers SHOULD provide this method definition.</p>\n\n<p>Implementation logic for subscriptions done via <code>node.on(type,\nfn)</code> or <code>Y.on(type, fn, target)</code>.  This\nfunction should set up the monitor(s) that will eventually fire the\nevent.  Typically this involves subscribing to at least one DOM\nevent.  It is recommended to store detach handles from any DOM\nsubscriptions to make for easy cleanup in the <code>detach</code>\nmethod.  Typically these handles are added to the <code>sub</code>\nobject.  Also for SyntheticEvents that leverage a single DOM\nsubscription under the hood, it is recommended to pass the DOM event\nobject to <code>notifier.fire(e)</code>.  (The event name on the\nobject will be updated).</p>", "comment": "undefined@method on\n", "params": [{"name": "node", "description": "<p>{Node} the node the subscription is being applied to</p>"}, {"name": "sub", "description": "<p>{Subscription} the object to track this subscription</p>"}, {"name": "notifier", "description": "<p>{SyntheticEvent.Notifier} call notifier.fire(..) to\n             trigger the execution of the subscribers</p>"}], "src": "can/lib/yui-3.7.3.js", "line": 19581})