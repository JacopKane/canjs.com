c({"type": "function", "name": "is", "params": [{"types": [{"type": "Array"}, {"type": "String"}], "name": "jwertyCode", "description": "<p>can be an array, or string of key\n     combinations, which includes optionals and or sequences</p>"}, {"types": [{"type": "KeyboardEvent"}], "name": "event", "description": "<p>is the KeyboardEvent to assert against</p>"}, {"types": [{"type": "Integer"}], "optional": true, "name": "i", "description": "<p>checks the <code>i</code> key in jwertyCode\n     sequence</p>"}, {"name": "0", "types": [{"type": "*"}]}], "parent": "can/control/modifier/key/key.js", "body": "", "description": "<p>jwerty.is</p>\n\n<p><code>jwerty.is</code> will return a boolean value, based on if <code>event</code> matches\n <code>jwertyCode</code>. <code>jwerty.is</code> is called by <code>jwerty.event</code> to check\n whether or not to fire the callback. <code>event</code> can be a DOM event, or\n a jQuery/Zepto/Ender manufactured event. The properties of\n <code>jwertyCode</code> (speficially ctrlKey, altKey, metaKey, shiftKey and\n keyCode) should match <code>jwertyCode</code>'s properties - if they do, then\n <code>jwerty.is</code> will return <code>true</code>. If they don't, <code>jwerty.is</code> will\n return <code>false</code>.</p>", "src": "can/control/modifier/key/key.js", "line": 311})