c({"name": "can.Observe.static.validate", "type": "function", "parent": "can.Observe.validations", "body": "", "description": "<p><code>validate(attrNames, [options,] validateProc(value, attrName) )</code> validates each of the\nspecified attributes with the given <code>validateProc</code> function.  The function\nshould return a value if there is an error.  By default, the return value is\nthe error message.  Validations should be set in the Constructor's static init method.</p>\n\n<p>The following example validates that a person's age is a number:</p>\n\n<pre><code>Person = can.Observe({\n    init : function(){\n      this.validate([\"age\"], function(val){\n        if( typeof val === 'number' ){\n          return \"must be a number\"\n        }\n      })\n    }\n},{})\n</code></pre>\n\n<p>The error message can be overwritten with <code>options</code> <strong>message</strong> property:</p>\n\n<pre><code>Person = can.Observe({\n    init : function(){\n      this.validate(\n        \"age\",\n      {message: \"must be a number\"},\n      function(val){\n          if( typeof val === 'number' ){\n            return true\n          }\n      })\n  }\n},{})\n</code></pre>", "title": "", "params": [{"types": [{"type": "Array", "template": [{"types": [{"type": "String"}]}]}], "name": "attrNames", "description": "<p>Attribute name(s) to to validate</p>"}, {"types": [{"type": "Object"}], "optional": true, "name": "options", "description": "<p>Options for the\nvalidations.  Valid options include 'message' and 'testIf'.</p>"}, {"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [{"types": [{"type": "*"}], "name": "value"}, {"types": [{"type": "String"}], "name": "attrName"}], "context": undefined}], "name": "validateProc", "description": "<p>Function used to validate each\ngiven attribute. Returns nothing if valid and an error message\notherwise. Function is called in the instance context and takes the\n<code>value</code> and <code>attrName</code> to validate.</p>"}], "src": "can/observe/validations/validations.js", "line": 75})