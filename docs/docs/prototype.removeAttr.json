c({"type": "function", "name": "prototype.removeAttr", "parent": "prototype", "body": "", "description": "<p>Remove a property from an Observe. </p>", "signatures": [{"code": "removeAttr(attrName)", "description": "", "params": [{"types": [{"type": "String"}], "name": "attrName", "description": "<p>the name of the property to remove</p>"}], "returns": {"types": [{"type": "*"}], "description": "<p>the value of the property that was removed</p>\n\n<p><code>removeAttr</code> removes a property by name from an Observe.</p>\n\n<pre>var people = new can.Observe({a: 'Alice', b: 'Bob', e: 'Eve'});\n\npeople.removeAttr('b'); // 'Bob'\npeople.attr();          // {a: 'Alice', e: 'Eve'}</pre>\n\n<p>Removing an attribute will cause a <em>change</em> event to fire with <code>'remove'</code>\npassed as the <em>how</em> parameter and <code>undefined</code> passed as the <em>newVal</em> to\nhandlers. It will also cause a <em>property name</em> event to fire with <code>undefined</code>\npassed as <em>newVal</em>. An in-depth description at these events can be found\nunder <code>[can.Observe.prototype.attr attr]</code>.</p>"}}], "src": "can/observe/observe.js", "line": 552})