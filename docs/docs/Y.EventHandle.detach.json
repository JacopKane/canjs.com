c({"type": "function", "name": "Y.EventHandle.detach", "params": [{"name": "type", "description": "<p>{string|Object}   Either the handle to the subscriber or the\n                       type of event.  If the type\n                       is not specified, it will attempt to remove\n                       the listener from all hosted events.</p>"}, {"name": "fn", "description": "<p>{Function} The subscribed function to unsubscribe, if not\n                         supplied, all subscribers will be removed.</p>"}, {"name": "context", "description": "<p>{Object}   The custom object passed to subscribe.  This is\n                       optional, but if supplied will be used to\n                       disambiguate multiple listeners that are the same\n                       (e.g., you subscribe many object using a function\n                       that lives on the prototype)</p>"}], "parent": "Y.EventHandle", "body": "", "description": "<p>Detach one or more listeners the from the specified event</p>", "comment": "undefined@method detach\n", "returns": {"types": [{"type": "EventTarget"}], "description": "<p>the host</p>"}, "src": "can/lib/yui-3.7.3.js", "line": 7471})