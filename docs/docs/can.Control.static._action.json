c({"type": "function", "name": "can.Control.static._action", "params": [{"types": [{"type": "Object"}], "name": "methodName", "description": "<p>the method that will be bound</p>"}, {"types": [{"type": "Object"}], "optional": true, "name": "options", "description": "<p>first param merged with class default options</p>"}], "parent": "can.Control.static", "body": "", "description": "<p>Takes a method name and the options passed to a control\nand tries to return the data necessary to pass to a processor\n(something that binds things).</p>\n\n<p>For performance reasons, this called twice.  First, it is called when \nthe Control class is created.  If the methodName is templated\nlike: \"{window} foo\", it returns null.  If it is not templated\nit returns event binding data.</p>\n\n<p>The resulting data is added to this.actions.</p>\n\n<p>When a control instance is created, _action is called again, but only\non templated actions.  </p>", "hide": true, "returns": {"types": [{"type": "Object"}], "description": "<p>null or the processor and pre-split parts. <br />\nThe processor is what does the binding/subscribing.</p>"}, "src": "can/control/control.js", "line": 111})