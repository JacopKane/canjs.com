c({"body": "", "description": "<p>Call a function on each element of a List. </p>", "title": "each", "name": "can.Observe.List.each", "type": "function", "signatures": [{"code": "each(callback)", "description": "<p><code>each</code> iterates through the Observe, calling a function\nfor each element.</p>", "params": [{"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [{"types": [{"type": "*"}]}, {"types": [{"type": "Number"}]}], "context": undefined}], "name": "callback", "description": "<p>the function to call for each element\nThe value and index of each element will be passed as the first and second\narguments, respectively, to the callback. If the callback returns false,\nthe loop will stop.</p>"}], "returns": {"types": [{"type": "can.Observe.List"}], "description": "<p>this List, for chaining</p>\n\n<pre>var i = 0;\nnew can.Observe([1, 10, 100]).each(function(element, index) {\n    i += element;\n});\n\ni; // 111\n\ni = 0;\nnew can.Observe([1, 10, 100]).each(function(element, index) {\n    i += element;\n    if(index >= 1) {\n        return false;\n    }\n});\n\ni; // 11</pre>"}}], "src": "can/observe/observe.js", "line": 1101})