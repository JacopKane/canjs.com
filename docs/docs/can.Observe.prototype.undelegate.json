c({"type": "function", "name": "can.Observe.prototype.undelegate", "params": [{"types": [{"type": "String"}], "name": "selector", "description": "<p>the attribute name of the object you want to undelegate from.</p>"}, {"types": [{"type": "String"}], "name": "event", "description": "<p>the event name</p>"}, {"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [], "context": undefined}], "name": "handler", "description": "<p>the callback handler</p>"}], "parent": "can.Observe.delegate", "body": "", "description": "<p><code>undelegate( selector, event, handler )</code> removes a delegated event handler from an observe.</p>\n\n<pre><code>observe.undelegate(\"name\",\"set\", handler )\n</code></pre>", "title": "", "returns": {"types": [{"type": "can.Observe"}], "description": "<p>the observe for chaining</p>"}, "src": "can/observe/delegate/delegate.js", "line": 327})