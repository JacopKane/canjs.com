c({"body": "<p><code>deferred.pipe(doneCallback, failCallback)</code> is a utility to filter Deferred(s).</p>\n\n<pre><code>var def = can.Deferred(),\n    filtered = def.pipe(function(val) {\n        return val + \" is awesome!\";\n    });\n\ndef.resolve('Can');\n\nfiltered.done(function(value) {\n    alert(value); // Alerts: 'Can is awesome!'\n});\n</code></pre>", "description": "<p>Add callbacks to a Deferred. </p>", "title": "", "name": "can.Deferred.prototype.pipe", "type": "function", "signatures": [{"code": "pipe(doneCallback[, failCallback])", "description": "", "params": [{"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [], "context": undefined}], "name": "doneCallback", "description": "<p>A function called when the Deferred is resolved.</p>"}, {"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [], "context": undefined}], "name": "failCallback", "description": "<p>A function called when the Deferred is rejected.</p>"}]}], "comment": " ", "src": "can/util/can.js", "line": 541})