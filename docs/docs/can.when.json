c({"body": "<p><code>can.when(deferred)</code> provides the ability to execute callback function(s) \ntypically based on a Deferred or AJAX object.</p>\n\n<pre><code>can.when( can.ajax('api/farm/animals') ).then(function(animals){ \n     alert(animals); //-&gt; alerts the ajax response\n});\n</code></pre>\n\n<p>You can also use this for regular JavaScript objects.</p>\n\n<pre><code>$.when( { animals: [ 'cat' ] } ).done(function(animals){ \n    alert(animals[0]); //-&gt; alerts 'cat' \n});\n</code></pre>", "description": "<p>Call a callback when a Deferred resolves. </p>", "title": "", "name": "can.when", "type": "function", "parent": "can.util", "signatures": [{"code": "can.when(deferred)", "description": "", "params": [{"types": [{"type": "Deferred"}, {"type": "Object"}], "name": "deferred", "description": "<p>The Deferred, AJAX, or normal Objects to call the callback on.</p>"}], "returns": {"types": [{"type": "Deferred"}], "description": "<p><strong>deferred</strong> if <strong>deferred</strong> is a Deferred,\notherwise a Deferred that resolves to <strong>deferred</strong>.</p>"}}], "comment": " ", "src": "can/util/can.js", "line": 502})