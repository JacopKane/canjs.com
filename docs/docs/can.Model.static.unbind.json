c({"body": "<p><code>unbind(eventType, handler)</code> removes a listener\nattached with [can.Model.bind].</p>\n\n<pre><code>var handler = function(ev, createdTask){\n\n}\nTask.bind(\"created\", handler)\nTask.unbind(\"created\", handler)\n</code></pre>\n\n<p>You have to pass the same function to <code>unbind</code> that you\npassed to <code>bind</code>.</p>", "description": "<p>Stop listening for events on a Model class. </p>", "title": "unbind", "name": "can.Model.static.unbind", "type": "function", "parent": "can.Model.static", "signatures": [{"code": "unbind(eventType, handler)", "description": "", "params": [{"types": [{"type": "String"}], "name": "eventType", "description": "<p>The type of event. It must be\n<code>\"created\"</code>, <code>\"udpated\"</code>, <code>\"destroyed\"</code>.</p>"}, {"types": [{"type": "function", "constructs": undefined, "returns": {"types": [{"type": "undefined"}]}, "params": [], "context": undefined}], "name": "handler", "description": "<p>A callback function\nthat was passed to <code>bind</code>.</p>"}], "returns": {"types": [{"type": "can.Model"}], "description": "<p>The model constructor function.</p>"}}], "comment": " ", "src": "can/model/model.js", "line": 148})